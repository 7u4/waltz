/*
 * Waltz - Enterprise Architecture
 * Copyright (C) 2016, 2017, 2018, 2019 Waltz open source project
 * See README.md for more information
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific
 *
 */

package com.khartec.waltz.service.software_catalog;

import com.khartec.waltz.data.software_catalog.SoftwareVersionIdSelectorFactory;
import com.khartec.waltz.data.software_catalog.VulnerabilityDao;
import com.khartec.waltz.model.IdSelectionOptions;
import com.khartec.waltz.model.tally.TallyPack;
import org.jooq.Record1;
import org.jooq.Select;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;


@Service
public class VulnerabilityService {
    private final VulnerabilityDao vulnerabilityDao;
    private final SoftwareVersionIdSelectorFactory softwareVersionIdSelectorFactory;

    @Autowired
    public VulnerabilityService(VulnerabilityDao vulnerabilityDao, SoftwareVersionIdSelectorFactory softwareVersionIdSelectorFactory) {
        this.vulnerabilityDao = vulnerabilityDao;
        this.softwareVersionIdSelectorFactory = softwareVersionIdSelectorFactory;
    }


    public List<TallyPack<String>> countSeverityByVersionIdOptions(IdSelectionOptions options) {
        Select<Record1<Long>> selector = softwareVersionIdSelectorFactory.apply(options);
        List<TallyPack<String>> tallies = vulnerabilityDao.countSeverityByVersionIdSelector(selector);
        return tallies;
    }
}
